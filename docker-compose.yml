services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: sensor_data
      TZ: Europe/Rome
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  db-init:
    image: postgres:latest
    depends_on:
      - db
    volumes:
      - ./src/sql/init_receipts.sql:/init_receipts.sql
    entrypoint: ["sh", "-c", "until pg_isready -h db -U postgres; do sleep 2; done && psql -h db -U postgres -d sensor_data -f /init_receipts.sql"]

  mongodb:
    image: mongo:4.4.18
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo-data:/data/db

  main:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: python3 main.py
    privileged: true
    devices:
      - "/dev/ttyACM0:/dev/ttyACM0"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_DATABASE=sensor_data
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - TZ=Europe/Rome
    restart: unless-stopped

  app:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: python3 app.py
    ports:
      - "5000:5000"
    depends_on:
      - db
      - main
      - mongodb
      - redis
    environment:
      - MONGO_URI=mongodb://root:example@mongodb:27017/
      - DB_HOST=db
      - DB_DATABASE=sensor_data
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - TZ=Europe/Rome
      - UPLOAD_FOLDER=/app/uploads
      - TESSERACT_CMD=/usr/bin/tesseract
    volumes:
      - ./src/backup.sh:/usr/local/bin/backup.sh
      - ./backup:/backup
      - ./src/static:/app/static
      - ./uploads:/app/uploads
    user: "1000:1000"
    restart: unless-stopped

  network_scanner:
    build:
      context: ./src
      dockerfile: Dockerfile
    command: python3 utils/scanner.py
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_DATABASE=sensor_data
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - TZ=Europe/Rome
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8081:80"
      - "4443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/smarthouse-ecc.crt:/etc/nginx/certs/smarthouse-ecc.crt:ro
      - ./nginx/smarthouse-ecc.key:/etc/nginx/certs/smarthouse-ecc.key:ro
    depends_on:
      - app
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data:
  mongo-data:
